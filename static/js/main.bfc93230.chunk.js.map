{"version":3,"sources":["reducers/index.jsx","store.jsx","Firebase.jsx","components/Login.jsx","components/Form.jsx","components/ForgetPassword.jsx","components/SlideData.jsx","components/Home.jsx","components/Navbar.jsx","App.js","reportWebVitals.js","index.js"],"names":["rootReducer","combineReducers","form","formReducer","store","createStore","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","history","auth","db","firestore","GoogleAuthProvider","Container","styled","div","SignInForm","Title","SpanError","InputField","Div","renderField","input","label","type","meta","touched","error","placeholder","connect","reduxForm","validate","values","errors","username","test","email","password","confirm_password","onSubmit","data","a","createUserWithEmailAndPassword","res","alert","collection","add","uid","user","authProvider","message","props","handleSubmit","pristine","reset","submitting","className","Field","name","component","value","disabled","onClick","to","ForgotPassword","signInWithEmailAndPassword","then","push","catch","useHistory","href","InputFieldData","Paragraph","ForgetPassword","useState","state","setState","e","preventDefault","sendPasswordResetEmail","onChange","target","SlideData","image","HomePage","slides","current","setCurrent","length","Array","isArray","map","slide","index","src","alt","Navbar","NavWrapper","Component","nav","App","exact","path","Home","LoginPopup","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bfc93230.chunk.js","sourcesContent":["\nimport { combineReducers } from \"redux\";\nimport { reducer as formReducer } from \"redux-form\";\n\nconst rootReducer = combineReducers({\n    form: formReducer,\n})\nexport default rootReducer;","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers/index\";\n\nconst store = createStore(rootReducer);\n\nexport default store;\n\n","\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nvar firebaseConfig = {\n    apiKey: \"AIzaSyAqg-u9O7My0HATWDUvQSEfF-zcDMfzQIU\",\n    authDomain: \"form-626be.firebaseapp.com\",\n    projectId: \"form-626be\",\n    storageBucket: \"form-626be.appspot.com\",\n    messagingSenderId: \"893875172318\",\n    appId: \"1:893875172318:web:b2abfb12579d83bfc8234f\",\n    measurementId: \"G-RDPM31YZLD\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  const auth = firebase.auth();\n  const db = firebase.firestore();\n  const googleProvider = new firebase.auth.GoogleAuthProvider();\n  \n  const signInWithGoogle = async () => {\n    try {\n      const res = await auth.signInWithPopup(googleProvider);\n      const user = res.user;\n      const query = await db\n      .collection(\"users\")\n      .where(\"uid\", user.uid)\n      .get();\n      if (query.docs.length === 0) {\n        await db.collection(\"users\").add({\n          uid: user.uid,\n         username: user.username,\n          authProvider: \"google\",\n          email: user.email,\n        });\n      }\n    } catch (err) {\n      alert(err.message);\n    }\n  }\n  export {db,signInWithGoogle,auth }\n\n","import React from 'react';\nimport { Field, reduxForm } from 'redux-form'\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { auth } from '../Firebase';\nimport { useHistory } from 'react-router-dom';\nlet history ;\n\nconst Container = styled.div`\n    width: 100%;\n    height: 100%;\n   \n    border-raduis: 40px;\n    display: flex;\n    align-items: center;\n    justify-content: center; \n    .btn {\n        width: 130px;\n        height: 45px;\n\n        outline: none;\n        border: none;\n        font-size: 18px;\n        text-transform: uppercase;\n        font-weight: 600;\n        margin: 20px 0px;\n        color: #5ab9ea;\n        cursor: pointer;\n        border-radius: 40px;\n        box-shadow: 12px 12px 24px 0 rgba(0, 0, 0, 0.2), -12px -12px 24px 0 rgba(255, 255, 255, 1);        \n    }\n    .clear{\n        width: 130px;\n        height: 45px;\n        outline: none;\n        border: none;\n        font-size: 18px;\n        text-transform: uppercase;\n        font-weight: 600;\n        margin: 20px 0px;\n        color: #5ab9ea;\n        cursor: pointer;\n        border-radius: 40px;\n        margin-left: 27px;\n        box-shadow: 12px 12px 24px 0 rgba(0, 0, 0, 0.2), -12px -12px 24px 0 rgba(255, 255, 255, 1);   \n    }\n    .account-text {\n        color: #5ab9ea;\n        font-weight: 600;       \n        padding-left: 6px;\n    }\n`\n\nconst SignInForm = styled.div`\n    p, a {\n        text-align: center;\n        font-size: 20px;\n        margin-left: 15px;\n    }\n`\n\nconst Title = styled.div`\n    font-size: 35px;\n    color: #5ab9ea;\n    margin-bottom: 10px;\n    text-align: center;\n    font-weight: 600;\n    text-transform: uppercase;\n`\n\nconst InputField = styled.div`\n    width: 320px;\n    height: 50px;\n    margun: 10px 0px;\n    background: #e0e0e0;\n    border-radius: 40px;\n    display: flex;\n    align-items: center;\n    margin: 20px 0px;\n    box-shadow: inset 6px 6px 10px 0 rgba(0, 0, 0, 0.2), -6px -6px 10px 0 rgba(255, 255, 255, 0.5);\n    i {\n        flex: 1.2;\n        text-align: center;\n        font-size: 20px;\n        margin-left: 25px;\n        color: #999;\n    }\n    input {\n        flex: 5;\n        width: 100%;\n        color: #999;\n        font-size: 18px;\n        font-weight: 500;\n        border: none;\n        outline: none;\n        background: none;\n`\nconst Div = styled.div `\n  display:flex;\n`\nconst SpanError = styled.div`\ncolor: red;\nmargin-top: 65px; \nfont-size: 15px;\n`\nconst ForgotPassword = styled.div`\n    text-align: end;\n`\nconst validate = values => {\n    const errors = {}\n\n    if (!values.email) {\n        errors.email = 'Email is required'\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n        errors.email = 'Invalid email address'\n    }\n\n    if (!values.password) {\n        errors.password = 'Password is required'\n    } else if (!/^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-])/i.test(values.password)) {\n        errors.password = 'Invalid Password';\n    }\n    return errors\n\n}\nconst renderField = ({ input, label, type, meta: { touched, error} }) => {\n    return (\n        <Div>\n            <input {...input} placeholder={label} type={type} />\n            {touched && ((error && <SpanError>{error}</SpanError>))}\n        </Div>\n        )\n    }\nconst LoginPopup= (props) => {\n    const { handleSubmit, pristine, reset, submitting} = props;\n    history = useHistory();\n    const submit = data => {return data}\n    return (\n     \n            <Container>\n                <SignInForm>\n                    <Title>Sign In</Title>\n                    <form onSubmit={handleSubmit(submit)}>\n                    <InputField>\n                        <i className='fa fa-user'></i>\n                        <Field name=\"email\" type=\"text\" component={renderField} label=\"Email\" />\n                    </InputField>\n                    <InputField>\n                        <i className='fa fa-lock'></i>\n                        <Field name=\"password\" type=\"password\" component={renderField} label=\"password\" />\n                    </InputField>\n                    <button type=\"submit\" value='login' disabled={submitting} onClick={handleSubmit} className='btn' >Login</button>\n                    <button type=\"button\" disabled={pristine || submitting} onClick={reset} className='clear'>Clear</button>\n                    <ForgotPassword>\n                        <a href='/Forget'>Forgot Password ?</a>\n                    </ForgotPassword>\n                    </form>\n                </SignInForm>\n            </Container>\n      \n    )\n}\nexport default  connect()(reduxForm({\n    form: 'Login',\n    validate,\n    onSubmit: async (data) => {\n       await auth.signInWithEmailAndPassword(data.email, data.password)\n        .then(()=>{\n            alert(\"user logged in successfully\")\n            history.push('/')\n        }).catch((error) =>{ \n            alert(`Error --> ${error.message} ErrorCode -->${400}`)\n        })\n    }\n})(LoginPopup))\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { db, auth } from '../Firebase';\n\nconst Container = styled.div`\n    width: 100%;\n    height: 100%;\n    border-raduis: 40px;\n    display: flex;\n    align-items: center;\n    justify-content: center; \n    .btn {\n        width: 130px;\n        height: 45px;\n        outline: none;\n        border: none;\n        font-size: 18px;\n        text-transform: uppercase;\n        font-weight: 600;\n        margin: 20px 0px;\n        color: #5ab9ea;\n        cursor: pointer;\n        border-radius: 40px;\n        box-shadow: 12px 12px 24px 0 rgba(0, 0, 0, 0.2), -12px -12px 24px 0 rgba(255, 255, 255, 1);        \n    }\n    .clear{\n        width: 130px;\n        height: 45px;\n        outline: none;\n        border: none;\n        font-size: 18px;\n        text-transform: uppercase;\n        font-weight: 600;\n        margin: 20px 0px;\n        color: #5ab9ea;\n        cursor: pointer;\n        border-radius: 40px;\n        margin-left: 27px;\n        box-shadow: 12px 12px 24px 0 rgba(0, 0, 0, 0.2), -12px -12px 24px 0 rgba(255, 255, 255, 1);        \n    }\n    .account-text {\n        color: #5ab9ea;\n        font-weight: 600;       \n        padding-left: 6px;\n    }\n`\n\nconst SignInForm = styled.div`\n    p, a {\n        text-align: center;\n        font-size: 20px;\n        margin-left: 15px;\n    }\n`\n\nconst Title = styled.div`\n    font-size: 35px;\n    color: #5ab9ea;\n    margin-bottom: 10px;\n    text-align: center;\n    font-weight: 600;\n    text-transform: uppercase;\n`\nconst SpanError = styled.div`\ncolor: red;\nmargin-top: 65px; \nfont-size: 15px;\n`\n\nconst InputField = styled.div`\n    width: 320px;\n    height: 50px;\n    margun: 10px 0px;\n    background: #e0e0e0;\n    border-radius: 40px;\n    display: flex;\n    align-items: center;\n    margin: 20px 0px;\n    box-shadow: inset 6px 6px 10px 0 rgba(0, 0, 0, 0.2), -6px -6px 10px 0 rgba(255, 255, 255, 0.5);\n    i {\n        flex: 1.2;\n        text-align: center;\n        font-size: 20px;\n        color: #999;\n        margin-left: 23px;\n    }\n    input {\n        flex: 5;\n        width: 100%;\n        color: black;\n        font-size: 18px;\n        font-weight: 500;\n        border: none;\n        outline: none;\n        background: none;\n        padding-left: 5px;\n    }\n`\nconst Div = styled.div`\n  display:flex;\n`\n\nconst validate = values => {\n    const errors = {}\n\n    if (!values.username) {\n        errors.username = `Username is required`\n    }\n    else if (!/^[A-Za-z]+$/i.test(values.username)) {\n        errors.username = 'Only alphabet characters are allowed'\n    }\n    if (!values.email) {\n        errors.email = 'Email is required'\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n        errors.email = 'Invalid email address'\n    }\n\n    if (!values.password) {\n        errors.password = 'Password is required'\n    } else if (!/^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-])/i.test(values.password)) {\n        errors.password = 'Invalid Password';\n    }\n\n    if (!values.confirm_password) {\n        errors.confirm_password = 'Confirm password is required'\n    }\n    if (values.password !== values.confirm_password) {\n        errors.confirm_password = 'Password not match'\n    }\n    return errors\n\n}\n\nconst renderField = ({ input, label, type, meta: { touched, error } }) => {\n    return (\n        <Div>\n            <input {...input} placeholder={label} type={type} />\n            {touched && ((error && <SpanError>{error}</SpanError>))}\n        </Div>\n    )\n}\n\nconst Form = (props) => {\n    const { handleSubmit, pristine, reset, submitting } = props;\n    const submit = data => {\n        return data\n    }\n    return (\n            <Container>\n                <SignInForm>\n                    <Title>Sign Up</Title>\n                    <form onSubmit={handleSubmit(submit)}>\n                        <InputField>\n                            <i className='fa fa-user' aria-hidden='true'></i>\n                            <div className=\"mainField\">\n                                <Field name=\"username\" type=\"text\" component={renderField} label=\"username\" /></div>\n                        </InputField>\n\n                        <InputField>\n                            <i className='fa fa-envelope' aria-hidden='true'></i>\n                            <Field name=\"email\" type=\"text\" component={renderField} label=\"Email\" />\n                        </InputField>\n                        <InputField>\n                            <i className='fa fa-lock' aria-hidden='true'></i>\n                            <Field name=\"password\" type=\"password\" component={renderField} label=\"password\" />\n\n                        </InputField>\n                        <InputField>\n                            <i className='fa fa-lock' aria-hidden='true'></i>\n                            <Field name=\"confirm_password\" type=\"password\" component={renderField} label=\"con password\" />\n                        </InputField>\n                        <button type=\"submit\" value='Sign Up' disabled={submitting} onClick={handleSubmit} className='btn' >Sign Up</button>\n                        <button type=\"button\" disabled={pristine || submitting} onClick={reset} className='clear'>Clear</button>\n                        <Link to='/Login'>Sign in</Link>\n\n\n                    </form>\n                </SignInForm>\n            </Container>\n    )\n}\n\nexport default connect()(reduxForm({\n    form: 'Form',\n    validate,\n    onSubmit: async (data) => {\n        try {\n\n            const username = data.username;\n            const email = data.email;\n            const password = data.password;\n\n            const res = await auth.createUserWithEmailAndPassword(email, password);\n            alert(\"create user successfully\")\n            await db.collection(\"users\").add({\n                uid: res.user.uid,\n                username,\n                authProvider: \"local\",\n                email,\n            })\n        }\n        catch (error) {\n            alert(`Error --> ${error.message} ErrorCode -->${400}`)\n        }\n    }\n})(Form))\n\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useState } from 'react';\nimport { auth } from '../Firebase';\n\nconst Container = styled.div`\n   .btn1 {\n        align-items: center;\n        height: 40px;\n        width: 187px;\n        background-color: orangered;\n        color: white;\n        font-weight: bold;\n        border-radius: 5px;\n        border: none;\n        margin-left: 545px;\n        margin-top: 5px;\n        text-align: center;\n        cursor: pointer;\n    }\n    `\nconst InputFieldData = styled.div`\n    width: 350px;\n    height: 50px;\n    margin: 10px 0px;\n\n    border-radius: 40px;\n    display: flex;\n    align-items: center;\n    margin: 20px 0px;\n    box-shadow: inset 6px 6px 10px 0 rgba(0, 0, 0, 0.2), -6px -6px 10px 0 rgba(255, 255, 255, 0.5)\n    input {\n        flex: 5;\n        width: 100%;\n        color: black;\n        font-size: 18px;\n        font-weight: 500;\n        border: none;\n        outline: none;\n        background: none;\n        padding-left: 5px;\n        color: rgb(51, 51, 51);\n\n    }\n    .data {\n    width: 310px;\n    height: 42px;\n    border-radius: 5px;\n    font-size: 20px;\n    padding: 5px;\n    padding-left: 16px;\n    margin-left: 500px;\n    }\n    `\nconst Title = styled.div`\n     text-align: center;\n     margin-top: 113px;\n     font-size: 50px;\n     font-weight: bold;\n    `\nconst Paragraph = styled.div`\n    text-align: center;\n    color: rgb(51, 51, 51);\n    line-height: 26px;\n    padding: 10px;\n    `\n\nconst ForgetPassword = () => {\n    const [state, setState] = useState({ email: '' })\nn    const inputChange = (e) => {\n        setState({ email: e.target.value })\n\n    }\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            await auth.sendPasswordResetEmail(state.email);\n            alert(\"Email verification link sent!\");\n            setState({ email: '' })\n        }\n        catch (error) {\n            alert(`Error --> ${error.message} ErrorCode -->${400}`)\n        }\n    }\n    return (\n        <Container>\n            <Title>Forgot Your Password ?</Title>\n            <Paragraph>Please enter the email address you used to create the account,<br /> and we’ll send you an activation code to reset your password.</Paragraph>\n            <form onSubmit={handleSubmit}>\n                <InputFieldData>\n                    <input type=\"text\" name=\"email\" label=\"email\" placeholder='email' className=\"data\" onChange={inputChange} value={state.email} />\n                </InputFieldData>\n                <button type=\"submit\" onClick={(e) => handleSubmit} className=\"btn1\">SEND VERIFY LINK</button>\n            </form>\n        </Container>\n    )\n}\n\nexport default ForgetPassword;\n\n","export const SlideData = [\n    {\n        image: 'https://mail.google.com/mail/u/0?ui=2&ik=61c55c330f&attid=0.1&permmsgid=msg-f:1709603866421789268&th=17b9bba89cb48254&view=att&disp=safe&realattid=f_kszx7iro0'\n    },\n    {\n        image: 'https://lbhmasyarakat.org/wp-content/uploads/2016/04/test3.jpg'\n    },\n    {\n        image: 'https://images.unsplash.com/photo-1499951360447-b19be8fe80f5?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=750&q=80'\n    },\n    {\n        image: 'https://www.lifewire.com/thmb/2BgnNgTFIGcWYCIiYhqZ0-rtRuE=/2121x1414/filters:fill(auto,1)/GettyImages-1139785112-76d1d0f975934233883a19f33b8cd813.jpg'  \n      }\n]","import React, { useState } from 'react';\nimport { SlideData } from './SlideData';\nimport { FaArrowAltCircleRight, FaArrowAltCircleLeft} from 'react-icons/fa';\n\nconst HomePage = (slides) => {\n    const [current, setCurrent ] = useState(0);\n    const length = SlideData.length;\n\n    const prevSlider = () =>{\n        setCurrent(current === 0 ? length - 1 : current - 1);\n    }\n    const nextSlider = () =>{\n        setCurrent(current === length - 1 ? 0 : current + 1);\n    }\n    if(!!Array.isArray(slides) || slides.length <= 0){\n        return null;    \n    } \n    return (\n        <section className = \"slider\">\n            <FaArrowAltCircleLeft className = \"left_arrow\" onClick = { prevSlider } />\n            <FaArrowAltCircleRight className = \"right_arrow\" onClick = { nextSlider }/>\n           {SlideData.map((slide,index) => {\n               return (\n                   <div className = 'slide active'> \n                   {index === current && (<img src= {slide.image} alt=\"description of image\" className=\"image\"/>)}\n                   </div>\n                   )\n            })}\n        </section>\n    )\n}\nexport default HomePage","import React, { Component, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nexport default class Navbar extends Component {\n    render() {\n        return (\n            <Fragment>\n                <NavWrapper>\n                    <Link to=\"/\" className=\"nav-link\">home</Link>\n                    <Link to=\"/Login\" className=\"nav-link\">login</Link>\n                    <Link to=\"/Signup\" className=\"nav-link\">signup</Link>\n                    <Link to=\"/Forget\" className=\"nav-link\">forget-password</Link>\n                </NavWrapper>\n            </Fragment>\n        )\n    }\n\n}\nconst NavWrapper = styled.nav`\n    background: black;\n    height: 75px;\n    padding-top: 22px;\n    .nav-link {\n        color: white;\n        font-size: 1.3rem;\n        text-transform: capitalize;\n        padding: 75px;\n        justify-content: left;\n        outline: none;\n        align-item: right;\n    }\n`;","import React from 'react';\nimport './App.css'\nimport {  BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport store from './store';\nimport { Provider } from 'react-redux';\nimport Form from './components/Form';\nimport LoginPopup from './components/Login';\nimport ForgetPassword from './components/ForgetPassword';\nimport HomePage from './components/Home';\nimport { SlideData } from './components/SlideData';\nimport Navbar from './components/Navbar';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Provider store = {store}>\n        <Router>\n        <Navbar />\n          <Switch>\n             <Route exact path ='/'><HomePage slides = {SlideData} /></Route>\n            <Route path = '/Signup'><Form/></Route> \n             <Route path ='/Login' component={LoginPopup}></Route>\n            <Route path ='/Forget' component={ForgetPassword}></Route>\n         </Switch>\n         </Router>\n       </Provider>\n      );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}